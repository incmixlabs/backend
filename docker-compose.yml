name: "incmix"


services:
  postgres:
    build:
      context: .
      dockerfile: db/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: incmix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      # POSTGRES_EXTENSIONS: plv8, btree_gist, hstore, pgvector, pgcrypto, CITEXT, pg_trgm, pg_cron, plpython3u
    ports:
      - 54321:5432
    volumes:
      - incmix-db-data:/var/lib/postgresql/data
    networks:
      - incmix-network

  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    restart: always
    command: --cluster_mode=emulated --lock_on_hashtags --requirepass ${REDIS_PASSWORD:-redis_password}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
    volumes:
      - incmix-dragonfly-data:/data
    networks:
      - incmix-network
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  minio:
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    restart: always
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000 # API
      - 9001:9001 # Web Dashboard
    volumes:
      - minio-data:/data
    networks:
      - incmix-network
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

volumes:
  incmix-db-data:
  incmix-dragonfly-data:
  minio-data:

networks:
  incmix-network:
