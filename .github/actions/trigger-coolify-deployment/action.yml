name: 'Trigger Coolify Deployment'
description: 'Triggers a Coolify deployment for all services after successful Docker image builds'

inputs:
  webhook_url:
    description: 'Coolify webhook URL for all services'
    required: true
  coolify_token:
    description: 'Coolify API token for authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Trigger Coolify deployment
      id: deploy
      run: |
        echo "🚀 Triggering Coolify deployment for all built services"

        # Make the webhook request to trigger deployment
        RESPONSE=$(curl -s -w "\n%{http_code}" \
          --request GET "${{ inputs.webhook_url }}" \
          --header "Authorization: Bearer ${{ inputs.coolify_token }}" \
          --header "Content-Type: application/json" \
          --header "User-Agent: GitHub-Actions-Coolify-Deploy/1.0")

        # Extract response body and status code
        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)

        echo "📡 Response Status: $HTTP_STATUS"
        echo "📄 Response Body: $RESPONSE_BODY"

        # Check if deployment was triggered successfully
        if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 202 ]; then
          echo "✅ Coolify deployment triggered successfully for all services"
          echo "deployment_status=success" >> $GITHUB_OUTPUT
        else
          echo "❌ Failed to trigger Coolify deployment"
          echo "deployment_status=failed" >> $GITHUB_OUTPUT
          exit 1
        fi
      shell: bash

outputs:
  deployment_status:
    description: 'Status of the deployment trigger (success/failed)'
    value: ${{ steps.deploy.outputs.deployment_status }}
