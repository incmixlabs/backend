name: CI Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      force_build_all:
        description: 'Force build all services'
        required: false
        default: false
        type: boolean
      target_branch:
        description: 'Target branch for comparison'
        required: false
        default: 'main'
        type: string

env:
  REGISTRY_URL: ghcr.io/${{ github.repository_owner }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.detect.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect service changes
        uses: ./.github/actions/detect-changes
        with:
          force_build_all: ${{ github.event.inputs.force_build_all || 'false' }}
          event_name: ${{ github.event_name }}
          target_branch: ${{ github.event.inputs.target_branch || 'main' }}

  build-services:
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.detect-changes.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch || github.ref }}

      - name: Load service configuration
        id: service-config
        run: |
          # Find the service config for the current matrix service
          SERVICE_CONFIG=$(cat .github/actions/service-config/services.json | jq -r --arg name "${{ matrix.service }}" '.services[] | select(.name == $name) | tojson')
          echo "config=$SERVICE_CONFIG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: build
        uses: ./.github/actions/docker-build-push
        with:
          dockerfile: ${{ fromJSON(steps.service-config.outputs.config).dockerfile }}
          context: ${{ fromJSON(steps.service-config.outputs.config).context }}
          image-name: ${{ fromJSON(steps.service-config.outputs.config).image_name }}
          image-tag: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: ${{ env.REGISTRY_URL }}/${{ fromJSON(steps.service-config.outputs.config).image_name }}:cache
          cache-to: ${{ github.event_name != 'pull_request' && format('type=registry,ref={0}/{1}:cache,mode=max', env.REGISTRY_URL, fromJSON(steps.service-config.outputs.config).image_name) || '' }}

      - name: Build summary
        uses: ./.github/actions/build-summary
        with:
          service: ${{ matrix.service }}
          image_name: ${{ fromJSON(steps.service-config.outputs.config).image_name }}
          registry_url: ${{ env.REGISTRY_URL }}
          image_tag: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}
          event_name: ${{ github.event_name }}
          pr_number: ${{ github.event.number }}
          image_id: ${{ steps.build.outputs.image-id }}
